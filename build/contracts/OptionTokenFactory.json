{
  "contractName": "OptionTokenFactory",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "template",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"template\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/brianwheeler/optimum/protocol/contracts/OptionTokenFactory.sol\":\"OptionTokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/brianwheeler/optimum/protocol/contracts/Cloner.sol\":{\"keccak256\":\"0x5c06853f1f661ff21eb4971ab045b8f7ec8c1397bd8e93e9c45087f74787ea6b\",\"urls\":[\"bzz-raw://fe4bbec096b808dad975969ba514b93682e9364321aca0e94e275fc7eec14e4f\",\"dweb:/ipfs/QmfLXXEoSeD8c9NL8LLzTUE5fFA3Enyh1nYpwVJfz3Eq7X\"]},\"/Users/brianwheeler/optimum/protocol/contracts/ERC20.sol\":{\"keccak256\":\"0x8e08258a4094ad7760c27e24f84cbb7c31f5daf28070fd4df56c5161990a8be0\",\"urls\":[\"bzz-raw://073901cf4df24e787e613f3ffe1cb5a9a51d8e64459c78e3b4db2cb48eb44399\",\"dweb:/ipfs/QmToE381sTtKRsHxd2YHor7yPtQvKMsQcGuRTQL2AchFch\"]},\"/Users/brianwheeler/optimum/protocol/contracts/ETHCallOptionToken.sol\":{\"keccak256\":\"0x30d13ebc77d4a7e2f272f1499c5a4065a14718b90fb0dfe8a6eb6f24d37f31b4\",\"urls\":[\"bzz-raw://0ed5e75696340f69eeb3770870487e85d76b84d590cf812b287dacf97fe2b1de\",\"dweb:/ipfs/QmSu9CzmV2GnDrQnjAPf612ci4cmSe4dSBxS1Z1MYHFaTz\"]},\"/Users/brianwheeler/optimum/protocol/contracts/LiquidatorInterface.sol\":{\"keccak256\":\"0x05c8890df456c404fa9c6ecf42d97ee9aee794a6d81ff263b9b779142e104570\",\"urls\":[\"bzz-raw://58a3e1cb7419ea23b3765481026471f1bde01b1db423da0fef0862d954310de8\",\"dweb:/ipfs/QmYt888RbTcVzyRLPCUsuZhwYzSJEjFk1xTzkf7gAz9T9o\"]},\"/Users/brianwheeler/optimum/protocol/contracts/Math.sol\":{\"keccak256\":\"0x0a34f2e34ae3c25c7af52f5966db5261c96dc54744f3d88e8326b144c1cdc54c\",\"urls\":[\"bzz-raw://00a6198e90342978bb85392b0a96e0dd264c882952d5dd95558914a1956fdb10\",\"dweb:/ipfs/QmdtypC7unTkQGoT5LpfWzThZXS8jEBNZvxviyWgtF4cav\"]},\"/Users/brianwheeler/optimum/protocol/contracts/OptionTokenFactory.sol\":{\"keccak256\":\"0x292d6572c0ebaa9e23d7037607264631517733278028e2b1fe0ffdf9666f106c\",\"urls\":[\"bzz-raw://f13a8f76d9230d449a6e052d97ca89ff01d8366af67cf6894cd6a086aba8a8c8\",\"dweb:/ipfs/QmWCNWdW5ZsiQ8zscgTbTnPDiLcQDSAEXK8jJVaB9NEgfS\"]},\"/Users/brianwheeler/optimum/protocol/contracts/ProxyInterface.sol\":{\"keccak256\":\"0x7f31ab525df18d85d5ce8d7e726c6696bffca3841fb3aaf1309fa91fcdb00840\",\"urls\":[\"bzz-raw://ae11da5a1342f28791001b3b2dac7dfaf08db2c9af9f2c05d96af108651dffb4\",\"dweb:/ipfs/QmeicDqTqK5seESoL8Jv4dryDcx2QA65enUe335wY61byc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b565b612b508061038483390190565b6102ea8061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f2ddd931461003b5780639cbf9e3614610085575b600080fd5b6100436100cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d6100f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806101216000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661026f565b90503373ffffffffffffffffffffffffffffffffffffffff166332d423b1826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156101a257600080fd5b505af11580156101b6573d6000803e3d6000fd5b505050506040513d60208110156101cc57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff1663158ef93e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022457600080fd5b505afa158015610238573d6000803e3d6000fd5b505050506040513d602081101561024e57600080fd5b810190808051906020019092919050505061026857600080fd5b8091505090565b600080690100000000000000000083027f5880730000000000000000000000000000000000000000803b80938091923cf3176000526020600080f090508091505091905056fea265627a7a72315820f983a6022d3347a5eb5c18ff787efbb315c9d76b59820a97da31a61f1ecc6c4364736f6c63430005100032608060405234801561001057600080fd5b50612b30806100206000396000f3fe6080604052600436106101e35760003560e01c806350b72eb311610102578063a9059cbb11610095578063be040fb011610064578063be040fb014610d22578063d63a6ccd14610d51578063dd62ed3e14610da8578063e231bff014610e2d576101e3565b8063a9059cbb14610c0f578063ad8f500814610c82578063b07f0a4114610cad578063bcb4ab0e14610d00576101e3565b806387c80464116100d157806387c80464146109645780638e7e80a214610aef57806395d89b4114610b54578063a47b328914610be4576101e3565b806350b72eb3146107f85780635c658165146108235780636664eb16146108a857806370a08231146108ff576101e3565b806324d4e90a1161017a5780633f35d033116101495780633f35d03314610595578063415f12401461069f5780634665096d146106da57806348f4c57414610705576101e3565b806324d4e90a1461048557806327e235e3146104d4578063313ce5671461053957806333a581d21461056a576101e3565b8063158ef93e116101b6578063158ef93e1461036d57806318160ddd1461039c57806323b872dd146103c757806323b98cde1461045a576101e3565b806306fdde03146101e8578063095ea7b3146102785780630aebeb4e146102eb57806311da60b41461033e575b600080fd5b3480156101f457600080fd5b506101fd610e58565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023d578082015181840152602081019050610222565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028457600080fd5b506102d16004803603604081101561029b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef6565b604051808215151515815260200191505060405180910390f35b3480156102f757600080fd5b506103246004803603602081101561030e57600080fd5b8101908080359060200190929190505050610fe8565b604051808215151515815260200191505060405180910390f35b34801561034a57600080fd5b50610353611187565b604051808215151515815260200191505060405180910390f35b34801561037957600080fd5b50610382611483565b604051808215151515815260200191505060405180910390f35b3480156103a857600080fd5b506103b1611496565b6040518082815260200191505060405180910390f35b3480156103d357600080fd5b50610440600480360360608110156103ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061149c565b604051808215151515815260200191505060405180910390f35b34801561046657600080fd5b5061046f61165a565b6040518082815260200191505060405180910390f35b34801561049157600080fd5b506104be600480360360208110156104a857600080fd5b8101908080359060200190929190505050611660565b6040518082815260200191505060405180910390f35b3480156104e057600080fd5b50610523600480360360208110156104f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611736565b6040518082815260200191505060405180910390f35b34801561054557600080fd5b5061054e61174e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561057657600080fd5b5061057f611753565b6040518082815260200191505060405180910390f35b3480156105a157600080fd5b50610685600480360360608110156105b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156105ff57600080fd5b82018360208201111561061157600080fd5b8035906020019184600183028401116401000000008311171561063357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611777565b604051808215151515815260200191505060405180910390f35b3480156106ab57600080fd5b506106d8600480360360208110156106c257600080fd5b81019080803590602001909291905050506119c4565b005b3480156106e657600080fd5b506106ef611e02565b6040518082815260200191505060405180910390f35b6107de6004803603604081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561075857600080fd5b82018360208201111561076a57600080fd5b8035906020019184600183028401116401000000008311171561078c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e08565b604051808215151515815260200191505060405180910390f35b34801561080457600080fd5b5061080d611fc5565b6040518082815260200191505060405180910390f35b34801561082f57600080fd5b506108926004803603604081101561084657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fcb565b6040518082815260200191505060405180910390f35b3480156108b457600080fd5b506108bd611ff0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090b57600080fd5b5061094e6004803603602081101561092257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612016565b6040518082815260200191505060405180910390f35b34801561097057600080fd5b50610ad56004803603608081101561098757600080fd5b81019080803590602001906401000000008111156109a457600080fd5b8201836020820111156109b657600080fd5b803590602001918460018302840111640100000000831117156109d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610a3b57600080fd5b820183602082011115610a4d57600080fd5b80359060200191846001830284011164010000000083111715610a6f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061205e565b604051808215151515815260200191505060405180910390f35b348015610afb57600080fd5b50610b3e60048036036020811015610b1257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061218c565b6040518082815260200191505060405180910390f35b348015610b6057600080fd5b50610b696121a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ba9578082015181840152602081019050610b8e565b50505050905090810190601f168015610bd65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bf057600080fd5b50610bf9612242565b6040518082815260200191505060405180910390f35b348015610c1b57600080fd5b50610c6860048036036040811015610c3257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612248565b604051808215151515815260200191505060405180910390f35b348015610c8e57600080fd5b50610c976122c4565b6040518082815260200191505060405180910390f35b348015610cb957600080fd5b50610ce660048036036020811015610cd057600080fd5b81019080803590602001909291905050506122ca565b604051808215151515815260200191505060405180910390f35b610d08612502565b604051808215151515815260200191505060405180910390f35b348015610d2e57600080fd5b50610d376125c4565b604051808215151515815260200191505060405180910390f35b348015610d5d57600080fd5b50610d66612897565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610db457600080fd5b50610e1760048036036040811015610dcb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128bd565b6040518082815260200191505060405180910390f35b348015610e3957600080fd5b50610e42612944565b6040518082815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eee5780601f10610ec357610100808354040283529160200191610eee565b820191906000526020600020905b815481529060010190602001808311610ed157829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60006006544210610ff857600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611085575081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b61108e57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600a600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561117d573d6000803e3d6000fd5b5060019050919050565b6000600654421161119757600080fd5b6000670de0b6b3a7640000600754600b546009540302816111b457fe5b049050600081600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561125957600080fd5b505afa15801561126d573d6000803e3d6000fd5b505050506040513d602081101561128357600080fd5b81019080805190602001909291905050500390506000670de0b6b3a764000082600454670de0b6b3a76400006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205402816112f657fe5b0402816112ff57fe5b0490506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460046000828254039250508190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561143d57600080fd5b505af1158015611451573d6000803e3d6000fd5b505050506040513d602081101561146757600080fd5b8101908080519060200190929190505050506001935050505090565b600560009054906101000a900460ff1681565b60045481565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561152b57600080fd5b61153685858561294a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156115e95782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60095481565b6000809050670de0b6b3a764000082101561167e5760009050611731565b5b6714d1120d7b16000082106116b0576705a08044edda900081019050600360028302816116a857fe5b04915061167f565b670de0b6b3a76400008203915060008290506000600190505b600a81101561172b578082816116db57fe5b0483019250600181019050670de0b6b3a7640000848302816116f957fe5b04915080828161170557fe5b0483039250600181019050670de0b6b3a76400008483028161172357fe5b0491506116c9565b82925050505b919050565b60006020528060005260406000206000915090505481565b601281565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600061178433858561294a565b60006040518080612ad86024913960240190506040518091039020905060008573ffffffffffffffffffffffffffffffffffffffff168233878760405160200180857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182805190602001908083835b602083106118735780518252602082019150602081019050602083039250611850565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040526040518082805190602001908083835b602083106118dd57805182526020820191506020810190506020830392506118ba565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461193f576040519150601f19603f3d011682016040523d82523d6000602084013e611944565b606091505b505090508061195257600080fd5b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a36001925050509392505050565b600061a8c060065403905060008160065403905060008161a8c060075402816119e957fe5b049050600654421080156119fc57508242115b8015611a0a57506007548110155b611a1357600080fd5b6000670de0b6b3a764000082860281611a2857fe5b04905080600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611acb57600080fd5b505afa158015611adf573d6000803e3d6000fd5b505050506040513d6020811015611af557600080fd5b810190808051906020019092919050505010611c7057600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611be857600080fd5b505af1158015611bfc573d6000803e3d6000fd5b505050506040513d6020811015611c1257600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015611c6a573d6000803e3d6000fd5b50611deb565b3373ffffffffffffffffffffffffffffffffffffffff16633ecfd51e866040518263ffffffff1660e01b81526004016000604051808303818588803b158015611cb857600080fd5b505af1158015611ccc573d6000803e3d6000fd5b5050505050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611dae57600080fd5b505af1158015611dc2573d6000803e3d6000fd5b505050506040513d6020811015611dd857600080fd5b8101908080519060200190929190505050505b846009600082825401925050819055505050505050565b60065481565b60003460046000828254019250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555034600a6000828254019250508190555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310611f455780518252602082019150602081019050602083039250611f22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611fa7576040519150601f19603f3d011682016040523d82523d6000602084013e611fac565b606091505b5050905080611fba57600080fd5b600191505092915050565b61a8c081565b6001602052816000526040600020602052806000526040600020600091509150505481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801515600560009054906101000a900460ff1615151461207f57600080fd5b734f678cebfe01cf0a111600b3d0afc27885aa578d600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739f4ca569de4c030a0affdfb321cc553e1426a1bf600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846002908051906020019061213f929190612a32565b508360039080519060200190612156929190612a32565b5082600681905550816007819055506001600560006101000a81548160ff02191690831515021790555060019050949350505050565b60086020528060005260406000206000915090505481565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223a5780601f1061220f5761010080835404028352916020019161223a565b820191906000526020600020905b81548152906001019060200180831161221d57829003601f168201915b505050505081565b600a5481565b600061225533848461294a565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60075481565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561231f575061a8c06006540342105b61232857600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008282540392505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a76400006007548702816123d957fe5b046040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561247657600080fd5b505af115801561248a573d6000803e3d6000fd5b505050506040513d60208110156124a057600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156124f8573d6000803e3d6000fd5b5060019050919050565b600034600460008282540192505081905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555034600a600082825401925050819055506001905090565b600060065442116125d457600080fd5b6000670de0b6b3a7640000600754600b546009540302816125f157fe5b0490506000600a54670de0b6b3a7640000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054028161264a57fe5b0490506000670de0b6b3a76400008383028161266257fe5b0490506000670de0b6b3a76400004784028161267a57fe5b049050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60008282540392505081905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b600082825401925050819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156127a6573d6000803e3d6000fd5b50600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561285057600080fd5b505af1158015612864573d6000803e3d6000fd5b505050506040513d602081101561287a57600080fd5b810190808051906020019092919050505050600194505050505090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600b5481565b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561299557600080fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a7357805160ff1916838001178555612aa1565b82800160010185558215612aa1579182015b82811115612aa0578251825591602001919060010190612a85565b5b509050612aae9190612ab2565b5090565b612ad491905b80821115612ad0576000816000905550600101612ab8565b5090565b9056fe72656365697665546f6b656e7328616464726573732c75696e743235362c627974657329a265627a7a7231582051a38fcb78981af80ec9fae27f5aab04774f3b9ed729c89e60dfb5cedae535fb64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636f2ddd931461003b5780639cbf9e3614610085575b600080fd5b6100436100cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d6100f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806101216000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661026f565b90503373ffffffffffffffffffffffffffffffffffffffff166332d423b1826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156101a257600080fd5b505af11580156101b6573d6000803e3d6000fd5b505050506040513d60208110156101cc57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff1663158ef93e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022457600080fd5b505afa158015610238573d6000803e3d6000fd5b505050506040513d602081101561024e57600080fd5b810190808051906020019092919050505061026857600080fd5b8091505090565b600080690100000000000000000083027f5880730000000000000000000000000000000000000000803b80938091923cf3176000526020600080f090508091505091905056fea265627a7a72315820f983a6022d3347a5eb5c18ff787efbb315c9d76b59820a97da31a61f1ecc6c4364736f6c63430005100032",
  "sourceMap": "114:404:8:-;;;188:82;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:82:8;238:24;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;238:24:8;219:8;;:44;;;;;;;;;;;;;;;;;;114:404;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "114:404:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;114:404:8;;;;;;;;;;;;;;;;;;;;;;;;158:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;276:240;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;158:23;;;;;;;;;;;;;:::o;276:240::-;315:7;334:13;350:15;356:8;;;;;;;;;;;350:5;:15::i;:::-;334:31;;390:10;375:47;;;423:5;375:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:54:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;375:54:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;375:54:8;;;;;;;;;;;;;;;;;466:5;447:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;447:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:39:8;;;;;;;;;;;;;;;;439:48;;;;;;504:5;497:12;;;276:240;:::o;46:2417:0:-;90:7;2226:14;2362:21;2360:1;2356:28;2288:66;2284:101;2279:3;2272:114;2421:2;2418:1;2416;2409:15;2399:25;;2450:6;2443:13;;;46:2417;;;:::o",
  "source": "pragma solidity ^0.5;\n\nimport \"./Cloner.sol\";\nimport \"./ETHCallOptionToken.sol\";\nimport \"./ProxyInterface.sol\";\n\n\ncontract OptionTokenFactory is Cloner {\n    address public template;\n\n    constructor() public {\n        template = address(new ETHCallOptionToken());\n    }\n\n    function createToken() public returns (address) {\n        address token = clone(template);\n        ProxyInterface(msg.sender).optionTokenWasCloned(token);\n        require(ETHCallOptionToken(token).initialized());\n        return token;\n    }\n}",
  "sourcePath": "/Users/brianwheeler/optimum/protocol/contracts/OptionTokenFactory.sol",
  "ast": {
    "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/OptionTokenFactory.sol",
    "exportedSymbols": {
      "OptionTokenFactory": [
        1080
      ]
    },
    "id": 1081,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1030,
        "literals": [
          "solidity",
          "^",
          "0.5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:21:8"
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/Cloner.sol",
        "file": "./Cloner.sol",
        "id": 1031,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 17,
        "src": "23:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/ETHCallOptionToken.sol",
        "file": "./ETHCallOptionToken.sol",
        "id": 1032,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 859,
        "src": "46:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/ProxyInterface.sol",
        "file": "./ProxyInterface.sol",
        "id": 1033,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 1091,
        "src": "81:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1034,
              "name": "Cloner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "145:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cloner_$16",
                "typeString": "contract Cloner"
              }
            },
            "id": 1035,
            "nodeType": "InheritanceSpecifier",
            "src": "145:6:8"
          }
        ],
        "contractDependencies": [
          16,
          858
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1080,
        "linearizedBaseContracts": [
          1080,
          16
        ],
        "name": "OptionTokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1037,
            "name": "template",
            "nodeType": "VariableDeclaration",
            "scope": 1080,
            "src": "158:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1036,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1048,
              "nodeType": "Block",
              "src": "209:61:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "219:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "238:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ETHCallOptionToken_$858_$",
                              "typeString": "function () returns (contract ETHCallOptionToken)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1042,
                              "name": "ETHCallOptionToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 858,
                              "src": "242:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                                "typeString": "contract ETHCallOptionToken"
                              }
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "238:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                            "typeString": "contract ETHCallOptionToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                            "typeString": "contract ETHCallOptionToken"
                          }
                        ],
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "230:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "230:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "219:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "219:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 1049,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:2:8"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:8"
            },
            "scope": 1080,
            "src": "188:82:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "324:192:8",
              "statements": [
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1078,
                      "src": "334:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "334:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1059,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "template",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "356:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1056,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "350:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "334:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1065,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "423:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1061,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "390:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1060,
                          "name": "ProxyInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "375:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ProxyInterface_$1090_$",
                            "typeString": "type(contract ProxyInterface)"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyInterface_$1090",
                          "typeString": "contract ProxyInterface"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "optionTokenWasCloned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1089,
                      "src": "375:47:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:54:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "375:54:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1070,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1055,
                                "src": "466:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1069,
                              "name": "ETHCallOptionToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "447:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ETHCallOptionToken_$858_$",
                                "typeString": "type(contract ETHCallOptionToken)"
                              }
                            },
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "447:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                              "typeString": "contract ETHCallOptionToken"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 308,
                          "src": "447:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "447:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1108,
                        1109
                      ],
                      "referencedDeclaration": 1108,
                      "src": "439:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "439:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "439:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1076,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "504:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1053,
                  "id": 1077,
                  "nodeType": "Return",
                  "src": "497:12:8"
                }
              ]
            },
            "documentation": null,
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:8"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "315:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:9:8"
            },
            "scope": 1080,
            "src": "276:240:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1081,
        "src": "114:404:8"
      }
    ],
    "src": "0:518:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/OptionTokenFactory.sol",
    "exportedSymbols": {
      "OptionTokenFactory": [
        1080
      ]
    },
    "id": 1081,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1030,
        "literals": [
          "solidity",
          "^",
          "0.5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:21:8"
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/Cloner.sol",
        "file": "./Cloner.sol",
        "id": 1031,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 17,
        "src": "23:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/ETHCallOptionToken.sol",
        "file": "./ETHCallOptionToken.sol",
        "id": 1032,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 859,
        "src": "46:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brianwheeler/optimum/protocol/contracts/ProxyInterface.sol",
        "file": "./ProxyInterface.sol",
        "id": 1033,
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 1091,
        "src": "81:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1034,
              "name": "Cloner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "145:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cloner_$16",
                "typeString": "contract Cloner"
              }
            },
            "id": 1035,
            "nodeType": "InheritanceSpecifier",
            "src": "145:6:8"
          }
        ],
        "contractDependencies": [
          16,
          858
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1080,
        "linearizedBaseContracts": [
          1080,
          16
        ],
        "name": "OptionTokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1037,
            "name": "template",
            "nodeType": "VariableDeclaration",
            "scope": 1080,
            "src": "158:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1036,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1048,
              "nodeType": "Block",
              "src": "209:61:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "219:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "238:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ETHCallOptionToken_$858_$",
                              "typeString": "function () returns (contract ETHCallOptionToken)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1042,
                              "name": "ETHCallOptionToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 858,
                              "src": "242:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                                "typeString": "contract ETHCallOptionToken"
                              }
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "238:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                            "typeString": "contract ETHCallOptionToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                            "typeString": "contract ETHCallOptionToken"
                          }
                        ],
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "230:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "230:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "219:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "219:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 1049,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:2:8"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:8"
            },
            "scope": 1080,
            "src": "188:82:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "324:192:8",
              "statements": [
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1078,
                      "src": "334:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "334:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1059,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "template",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "356:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1056,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "350:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "334:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1065,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "423:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1061,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "390:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1060,
                          "name": "ProxyInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "375:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ProxyInterface_$1090_$",
                            "typeString": "type(contract ProxyInterface)"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyInterface_$1090",
                          "typeString": "contract ProxyInterface"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "optionTokenWasCloned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1089,
                      "src": "375:47:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:54:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "375:54:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1070,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1055,
                                "src": "466:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1069,
                              "name": "ETHCallOptionToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "447:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ETHCallOptionToken_$858_$",
                                "typeString": "type(contract ETHCallOptionToken)"
                              }
                            },
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "447:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ETHCallOptionToken_$858",
                              "typeString": "contract ETHCallOptionToken"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 308,
                          "src": "447:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "447:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1108,
                        1109
                      ],
                      "referencedDeclaration": 1108,
                      "src": "439:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "439:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "439:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1076,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "504:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1053,
                  "id": 1077,
                  "nodeType": "Return",
                  "src": "497:12:8"
                }
              ]
            },
            "documentation": null,
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:8"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "315:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:9:8"
            },
            "scope": 1080,
            "src": "276:240:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1081,
        "src": "114:404:8"
      }
    ],
    "src": "0:518:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x15F197A3f60b766cAF203416d91c69a00Cc41C61",
      "transactionHash": "0x610e5cdffcb303da1172c83fb11fd867f7c14d533cdcb51ffb0d48b60205625c"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-06T18:25:47.478Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}